# -*- python -*-
load("@drake//tools/install:install.bzl", "install")

package(default_visibility = ["//visibility:public"])

load(
    "@drake//tools/skylark:pybind.bzl",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
    "pybind_py_library",
)

load("@rules_python//python:packaging.bzl", "py_wheel")
load("@rules_python//python:packaging.bzl", "py_package")

pybind_py_library(
    name = "c3_py",
    cc_deps = [
        "//src:c3",
    ],
    cc_so_name = "c3",
    cc_srcs = ["c3.cc"],
    py_deps = [
        ":module_py",
    ],
    py_imports = ["."],
)

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

py_library(
    name = "module_py",
    srcs = [
        "__init__.py",
    ],
    imports = PACKAGE_INFO.py_imports,
    deps = [
    ],
)

PY_LIBRARIES = [
    ":module_py",
    ":c3_py",
]

# Package roll-up (for Bazel dependencies).
py_library(
    name = "pyc3",
    imports = PACKAGE_INFO.py_imports,
    deps = PY_LIBRARIES,
)

# Use py_package to collect all transitive dependencies of a target,
# selecting just the files within a specific python package.
py_package(
    name = "c3_pkg",
    # Only include these Python packages.
    packages = [],
    deps = [":pyc3",
            "@gurobi//:gurobi_c"],
)

py_wheel(
    name = "pyc3_wheel",
    # Package data. We're building "example_minimal_package-0.0.1-py3-none-any.whl"
    distribution = "pyc3",
    python_tag = "py3",
    version = "0.0.1",
    deps = [":c3_pkg"],
    license = "MIT",
    platform = "linux_x86_64",
    strip_path_prefixes = ["bindings/"],
)